{
  "swagger": "2.0",
  "info": {
    "title": "google/api/servicecontrol/v1/service_controller.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ServiceController"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/services/{service_name}:check": {
      "post": {
        "summary": "Checks whether an operation on a service should be allowed to proceed\nbased on the configuration of the service and related policies. It must be\ncalled before the operation is executed.",
        "description": "If feasible, the client should cache the check results and reuse them for\n60 seconds. In case of any server errors, the client should rely on the\ncached results for much longer time to avoid outage.\nWARNING: There is general 60s delay for the configuration and policy\npropagation, therefore callers MUST NOT depend on the `Check` method having\nthe latest policy information.\n\nNOTE: the [CheckRequest][google.api.servicecontrol.v1.CheckRequest] has\nthe size limit (wire-format byte size) of 1MB.\n\nThis method requires the `servicemanagement.services.check` permission\non the specified service. For more information, see\n[Cloud IAM](https://cloud.google.com/iam).",
        "operationId": "Check",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "service_name",
            "description": "The service name as specified in its service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee\n[google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)\nfor the definition of a service name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceControllerCheckBody"
            }
          }
        ],
        "tags": [
          "ServiceController"
        ]
      }
    },
    "/v1/services/{service_name}:report": {
      "post": {
        "summary": "Reports operation results to Google Service Control, such as logs and\nmetrics. It should be called after an operation is completed.",
        "description": "If feasible, the client should aggregate reporting data for up to 5\nseconds to reduce API traffic. Limiting aggregation to 5 seconds is to\nreduce data loss during client crashes. Clients should carefully choose\nthe aggregation time window to avoid data loss risk more than 0.01%\nfor business and compliance reasons.\n\nNOTE: the [ReportRequest][google.api.servicecontrol.v1.ReportRequest] has\nthe size limit (wire-format byte size) of 1MB.\n\nThis method requires the `servicemanagement.services.report` permission\non the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
        "operationId": "Report",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "service_name",
            "description": "The service name as specified in its service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee\n[google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)\nfor the definition of a service name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceControllerReportBody"
            }
          }
        ],
        "tags": [
          "ServiceController"
        ]
      }
    }
  },
  "definitions": {
    "CheckResponseCheckInfo": {
      "type": "object",
      "properties": {
        "unused_arguments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of fields and label keys that are ignored by the server.\nThe client doesn't need to send them for following requests to improve\nperformance and allow better aggregation."
        },
        "consumer_info": {
          "$ref": "#/definitions/CheckResponseConsumerInfo",
          "description": "Consumer info of this check."
        },
        "api_key_uid": {
          "type": "string",
          "description": "The unique id of the api key in the format of \"apikey:\u003cUID\u003e\".\nThis field will be populated when the consumer passed to Service Control\nis an API key and all the API key related validations are successful."
        }
      },
      "description": "Contains additional information about the check operation."
    },
    "CheckResponseConsumerInfo": {
      "type": "object",
      "properties": {
        "project_number": {
          "type": "string",
          "format": "int64",
          "description": "The Google cloud project number, e.g. 1234567890. A value of 0 indicates\nno project number is found.\n\nNOTE: This field is deprecated after we support flexible consumer\nid. New code should not depend on this field anymore."
        },
        "type": {
          "$ref": "#/definitions/ConsumerInfoConsumerType",
          "description": "The type of the consumer which should have been defined in\n[Google Resource Manager](https://cloud.google.com/resource-manager/)."
        },
        "consumer_number": {
          "type": "string",
          "format": "int64",
          "description": "The consumer identity number, can be Google cloud project number, folder\nnumber or organization number e.g. 1234567890. A value of 0 indicates no\nconsumer number is found."
        }
      },
      "description": "`ConsumerInfo` provides information about the consumer."
    },
    "ConsumerInfoConsumerType": {
      "type": "string",
      "enum": [
        "PROJECT",
        "FOLDER",
        "ORGANIZATION",
        "SERVICE_SPECIFIC"
      ],
      "description": "The type of the consumer as defined in\n[Google Resource Manager](https://cloud.google.com/resource-manager/).\n\n - PROJECT: The consumer is a Google Cloud Project.\n - FOLDER: The consumer is a Google Cloud Folder.\n - ORGANIZATION: The consumer is a Google Cloud Organization.\n - SERVICE_SPECIFIC: Service-specific resource container which is defined by the service\nproducer to offer their users the ability to manage service control\nfunctionalities at a finer level of granularity than the PROJECT."
    },
    "DistributionExemplar": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "Value of the exemplar point. This value determines to which bucket the\nexemplar belongs."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The observation (sampling) time of the above value."
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "Trace: type.googleapis.com/google.monitoring.v3.SpanContext\n\n  Literal string: type.googleapis.com/google.protobuf.StringValue\n\n  Labels dropped during aggregation:\n    type.googleapis.com/google.monitoring.v3.DroppedLabels\n\nThere may be only a single attachment of any given message type in a\nsingle exemplar, and this is enforced by the system.",
          "title": "Contextual information about the example value. Examples are:"
        }
      },
      "description": "Exemplars are example points that may be used to annotate aggregated\ndistribution values. They are metadata that gives information about a\nparticular value added to a Distribution bucket, such as a trace ID that\nwas active when a value was added. They may contain further information,\nsuch as a example values and timestamps, origin, etc."
    },
    "DistributionExplicitBuckets": {
      "type": "object",
      "properties": {
        "bounds": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          },
          "description": "'bound' is a list of strictly increasing boundaries between\nbuckets. Note that a list of length N-1 defines N buckets because\nof fenceposting. See comments on `bucket_options` for details.\n\nThe i'th finite bucket covers the interval\n  [bound[i-1], bound[i])\nwhere i ranges from 1 to bound_size() - 1. Note that there are no\nfinite buckets at all if 'bound' only contains a single element; in\nthat special case the single bound defines the boundary between the\nunderflow and overflow buckets.\n\nbucket number                   lower bound    upper bound\n i == 0 (underflow)              -inf           bound[i]\n 0 \u003c i \u003c bound_size()            bound[i-1]     bound[i]\n i == bound_size() (overflow)    bound[i-1]     +inf"
        }
      },
      "description": "Describing buckets with arbitrary user-provided width."
    },
    "DistributionExponentialBuckets": {
      "type": "object",
      "properties": {
        "num_finite_buckets": {
          "type": "integer",
          "format": "int32",
          "description": "The number of finite buckets. With the underflow and overflow buckets,\nthe total number of buckets is `num_finite_buckets` + 2.\nSee comments on `bucket_options` for details."
        },
        "growth_factor": {
          "type": "number",
          "format": "double",
          "description": "The i'th exponential bucket covers the interval\n  [scale * growth_factor^(i-1), scale * growth_factor^i)\nwhere i ranges from 1 to num_finite_buckets inclusive.\nMust be larger than 1.0."
        },
        "scale": {
          "type": "number",
          "format": "double",
          "description": "The i'th exponential bucket covers the interval\n  [scale * growth_factor^(i-1), scale * growth_factor^i)\nwhere i ranges from 1 to num_finite_buckets inclusive.\nMust be \u003e 0."
        }
      },
      "description": "Describing buckets with exponentially growing width."
    },
    "DistributionLinearBuckets": {
      "type": "object",
      "properties": {
        "num_finite_buckets": {
          "type": "integer",
          "format": "int32",
          "description": "The number of finite buckets. With the underflow and overflow buckets,\nthe total number of buckets is `num_finite_buckets` + 2.\nSee comments on `bucket_options` for details."
        },
        "width": {
          "type": "number",
          "format": "double",
          "description": "The i'th linear bucket covers the interval\n  [offset + (i-1) * width, offset + i * width)\nwhere i ranges from 1 to num_finite_buckets, inclusive.\nMust be strictly positive."
        },
        "offset": {
          "type": "number",
          "format": "double",
          "description": "The i'th linear bucket covers the interval\n  [offset + (i-1) * width, offset + i * width)\nwhere i ranges from 1 to num_finite_buckets, inclusive."
        }
      },
      "description": "Describing buckets with constant width."
    },
    "OperationImportance": {
      "type": "string",
      "enum": [
        "HIGH"
      ],
      "description": "Defines the importance of the data contained in the operation.\n\n - HIGH: Disables data aggregation to minimize data loss. It is for operations\nthat contains significant monetary value or audit trail. This feature\nonly applies to the client libraries."
    },
    "ReportResponseReportError": {
      "type": "object",
      "properties": {
        "operation_id": {
          "type": "string",
          "description": "The\n[Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]\nvalue from the request."
        },
        "status": {
          "$ref": "#/definitions/rpcStatus",
          "description": "Details of the error when processing the\n[Operation][google.api.servicecontrol.v1.Operation]."
        }
      },
      "description": "Represents the processing error of one\n[Operation][google.api.servicecontrol.v1.Operation] in the request."
    },
    "ServiceControllerCheckBody": {
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/v1Operation",
          "description": "The operation to be checked."
        },
        "service_config_id": {
          "type": "string",
          "description": "Specifies which version of service configuration should be used to process\nthe request.\n\nIf unspecified or no matching version can be found, the\nlatest one will be used."
        }
      },
      "description": "Request message for the Check method."
    },
    "ServiceControllerReportBody": {
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Operation"
          },
          "description": "Operations to be reported.\n\nTypically the service should report one operation per request.\nPutting multiple operations into a single request is allowed, but should\nbe used only when multiple operations are natually available at the time\nof the report.\n\nThere is no limit on the number of operations in the same ReportRequest,\nhowever the ReportRequest size should be no larger than 1MB. See\n[ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors]\nfor partial failure behavior."
        },
        "service_config_id": {
          "type": "string",
          "description": "Specifies which version of service config should be used to process the\nrequest.\n\nIf unspecified or no matching version can be found, the\nlatest one will be used."
        }
      },
      "description": "Request message for the Report method."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "servicecontrolv1Distribution": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64",
          "description": "The total number of samples in the distribution. Must be \u003e= 0."
        },
        "mean": {
          "type": "number",
          "format": "double",
          "description": "The arithmetic mean of the samples in the distribution. If `count` is\nzero then this field must be zero."
        },
        "minimum": {
          "type": "number",
          "format": "double",
          "description": "The minimum of the population of values. Ignored if `count` is zero."
        },
        "maximum": {
          "type": "number",
          "format": "double",
          "description": "The maximum of the population of values. Ignored if `count` is zero."
        },
        "sum_of_squared_deviation": {
          "type": "number",
          "format": "double",
          "description": "The sum of squared deviations from the mean:\n  Sum[i=1..count]((x_i - mean)^2)\nwhere each x_i is a sample values. If `count` is zero then this field\nmust be zero, otherwise validation of the request fails."
        },
        "bucket_counts": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The number of samples in each histogram bucket. `bucket_counts` are\noptional. If present, they must sum to the `count` value.\n\nThe buckets are defined below in `bucket_option`. There are N buckets.\n`bucket_counts[0]` is the number of samples in the underflow bucket.\n`bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples\nin each of the finite buckets. And `bucket_counts[N] is the number\nof samples in the overflow bucket. See the comments of `bucket_option`\nbelow for more details.\n\nAny suffix of trailing zeros may be omitted."
        },
        "linear_buckets": {
          "$ref": "#/definitions/DistributionLinearBuckets",
          "description": "Buckets with constant width."
        },
        "exponential_buckets": {
          "$ref": "#/definitions/DistributionExponentialBuckets",
          "description": "Buckets with exponentially growing width."
        },
        "explicit_buckets": {
          "$ref": "#/definitions/DistributionExplicitBuckets",
          "description": "Buckets with arbitrary user-provided width."
        },
        "exemplars": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DistributionExemplar"
          },
          "description": "Example points. Must be in increasing order of `value` field."
        }
      },
      "description": "* the arithmetic mean of the samples\n* the minimum and maximum of the samples\n* the sum-squared-deviation of the samples, used to compute variance\n* a histogram of the values of the sample points",
      "title": "Distribution represents a frequency distribution of double-valued sample\npoints. It contains the size of the population of sample points plus\nadditional optional information:"
    },
    "typeLogSeverity": {
      "type": "string",
      "enum": [
        "DEBUG",
        "INFO",
        "NOTICE",
        "WARNING",
        "ERROR",
        "CRITICAL",
        "ALERT",
        "EMERGENCY"
      ],
      "description": "The severity of the event described in a log entry, expressed as one of the\nstandard severity levels listed below.  For your reference, the levels are\nassigned the listed numeric values. The effect of using numeric values other\nthan those listed is undefined.\n\nYou can filter for log entries by severity.  For example, the following\nfilter expression will match log entries with severities `INFO`, `NOTICE`,\nand `WARNING`:\n\n    severity \u003e DEBUG AND severity \u003c= WARNING\n\nIf you are writing log entries, you should map other severity encodings to\none of these standard levels. For example, you might map all of Java's FINE,\nFINER, and FINEST levels to `LogSeverity.DEBUG`. You can preserve the\noriginal severity level in the log entry payload if you wish.\n\n - DEBUG: (100) Debug or trace information.\n - INFO: (200) Routine information, such as ongoing status or performance.\n - NOTICE: (300) Normal but significant events, such as start up, shut down, or\na configuration change.\n - WARNING: (400) Warning events might cause problems.\n - ERROR: (500) Error events are likely to cause problems.\n - CRITICAL: (600) Critical events cause more severe problems or outages.\n - ALERT: (700) A person must take an action immediately.\n - EMERGENCY: (800) One or more systems are unusable."
    },
    "v1CheckError": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/v1CheckErrorCode",
          "description": "The error code."
        },
        "subject": {
          "type": "string",
          "description": "- \"project:\u003cproject-id or project-number\u003e\"\n- \"folder:\u003cfolder-id\u003e\"\n- \"organization:\u003corganization-id\u003e\"",
          "title": "Subject to whom this error applies. See the specific code enum for more\ndetails on this field. For example:"
        },
        "detail": {
          "type": "string",
          "description": "Free-form text providing details on the error cause of the error."
        },
        "status": {
          "$ref": "#/definitions/rpcStatus",
          "description": "Contains public information about the check error. If available,\n`status.code` will be non zero and client can propagate it out as public\nerror."
        }
      },
      "description": "Defines the errors to be returned in\n[google.api.servicecontrol.v1.CheckResponse.check_errors][google.api.servicecontrol.v1.CheckResponse.check_errors]."
    },
    "v1CheckErrorCode": {
      "type": "string",
      "enum": [
        "NOT_FOUND",
        "PERMISSION_DENIED",
        "RESOURCE_EXHAUSTED",
        "SERVICE_NOT_ACTIVATED",
        "BILLING_DISABLED",
        "PROJECT_DELETED",
        "PROJECT_INVALID",
        "CONSUMER_INVALID",
        "IP_ADDRESS_BLOCKED",
        "REFERER_BLOCKED",
        "CLIENT_APP_BLOCKED",
        "API_TARGET_BLOCKED",
        "API_KEY_INVALID",
        "API_KEY_EXPIRED",
        "API_KEY_NOT_FOUND",
        "INVALID_CREDENTIAL",
        "NAMESPACE_LOOKUP_UNAVAILABLE",
        "SERVICE_STATUS_UNAVAILABLE",
        "BILLING_STATUS_UNAVAILABLE",
        "CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE"
      ],
      "description": "Error codes for Check responses.\n\n - NOT_FOUND: The consumer's project id, network container, or resource container was\nnot found. Same as [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND].\n - PERMISSION_DENIED: The consumer doesn't have access to the specified resource.\nSame as [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].\n - RESOURCE_EXHAUSTED: Quota check failed. Same as [google.rpc.Code.RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED].\n - SERVICE_NOT_ACTIVATED: The consumer hasn't activated the service.\n - BILLING_DISABLED: The consumer cannot access the service because billing is disabled.\n - PROJECT_DELETED: The consumer's project has been marked as deleted (soft deletion).\n - PROJECT_INVALID: The consumer's project number or id does not represent a valid project.\n - CONSUMER_INVALID: The input consumer info does not represent a valid consumer folder or\norganization.\n - IP_ADDRESS_BLOCKED: The IP address of the consumer is invalid for the specific consumer\nproject.\n - REFERER_BLOCKED: The referer address of the consumer request is invalid for the specific\nconsumer project.\n - CLIENT_APP_BLOCKED: The client application of the consumer request is invalid for the\nspecific consumer project.\n - API_TARGET_BLOCKED: The API targeted by this request is invalid for the specified consumer\nproject.\n - API_KEY_INVALID: The consumer's API key is invalid.\n - API_KEY_EXPIRED: The consumer's API Key has expired.\n - API_KEY_NOT_FOUND: The consumer's API Key was not found in config record.\n - INVALID_CREDENTIAL: The credential in the request can not be verified.\n - NAMESPACE_LOOKUP_UNAVAILABLE: The backend server for looking up project id/number is unavailable.\n - SERVICE_STATUS_UNAVAILABLE: The backend server for checking service status is unavailable.\n - BILLING_STATUS_UNAVAILABLE: The backend server for checking billing status is unavailable.\n - CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE: Cloud Resource Manager backend server is unavailable."
    },
    "v1CheckResponse": {
      "type": "object",
      "properties": {
        "operation_id": {
          "type": "string",
          "description": "The same operation_id value used in the\n[CheckRequest][google.api.servicecontrol.v1.CheckRequest]. Used for logging\nand diagnostics purposes."
        },
        "check_errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CheckError"
          },
          "description": "Indicate the decision of the check.\n\nIf no check errors are present, the service should process the operation.\nOtherwise the service should use the list of errors to determine the\nappropriate action."
        },
        "service_config_id": {
          "type": "string",
          "description": "The actual config id used to process the request."
        },
        "service_rollout_id": {
          "type": "string",
          "description": "The current service rollout id used to process the request."
        },
        "check_info": {
          "$ref": "#/definitions/CheckResponseCheckInfo",
          "description": "Feedback data returned from the server during processing a Check request."
        }
      },
      "description": "Response message for the Check method."
    },
    "v1HttpRequest": {
      "type": "object",
      "properties": {
        "request_method": {
          "type": "string",
          "description": "The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`."
        },
        "request_url": {
          "type": "string",
          "description": "The scheme (http, https), the host name, the path, and the query\nportion of the URL that was requested.\nExample: `\"http://example.com/some/info?color=red\"`."
        },
        "request_size": {
          "type": "string",
          "format": "int64",
          "description": "The size of the HTTP request message in bytes, including the request\nheaders and the request body."
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The response code indicating the status of the response.\nExamples: 200, 404."
        },
        "response_size": {
          "type": "string",
          "format": "int64",
          "description": "The size of the HTTP response message sent back to the client, in bytes,\nincluding the response headers and the response body."
        },
        "user_agent": {
          "type": "string",
          "description": "The user agent sent by the client. Example:\n`\"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET\nCLR 1.0.3705)\"`."
        },
        "remote_ip": {
          "type": "string",
          "description": "The IP address (IPv4 or IPv6) of the client that issued the HTTP\nrequest. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`."
        },
        "server_ip": {
          "type": "string",
          "description": "The IP address (IPv4 or IPv6) of the origin server that the request was\nsent to."
        },
        "referer": {
          "type": "string",
          "description": "The referer URL of the request, as defined in\n[HTTP/1.1 Header Field\nDefinitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html)."
        },
        "latency": {
          "type": "string",
          "description": "The request processing latency on the server, from the time the request was\nreceived until the response was sent."
        },
        "cache_lookup": {
          "type": "boolean",
          "description": "Whether or not a cache lookup was attempted."
        },
        "cache_hit": {
          "type": "boolean",
          "description": "Whether or not an entity was served from cache\n(with or without validation)."
        },
        "cache_validated_with_origin_server": {
          "type": "boolean",
          "description": "Whether or not the response was validated with the origin server before\nbeing served from cache. This field is only meaningful if `cache_hit` is\nTrue."
        },
        "cache_fill_bytes": {
          "type": "string",
          "format": "int64",
          "description": "The number of HTTP response bytes inserted into cache. Set only when a\ncache fill was attempted."
        },
        "protocol": {
          "type": "string",
          "title": "Protocol used for the request. Examples: \"HTTP/1.1\", \"HTTP/2\", \"websocket\""
        }
      },
      "description": "A common proto for logging HTTP requests. Only contains semantics\ndefined by the HTTP specification. Product-specific logging\ninformation MUST be defined in a separate message."
    },
    "v1LogEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The log to which this log entry belongs. Examples: `\"syslog\"`,\n`\"book_log\"`."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time the event described by the log entry occurred. If\nomitted, defaults to operation start time."
        },
        "severity": {
          "$ref": "#/definitions/typeLogSeverity",
          "description": "The severity of the log entry. The default value is\n`LogSeverity.DEFAULT`."
        },
        "http_request": {
          "$ref": "#/definitions/v1HttpRequest",
          "description": "Optional. Information about the HTTP request associated with this\nlog entry, if applicable."
        },
        "trace": {
          "type": "string",
          "title": "Optional. Resource name of the trace associated with the log entry, if any.\nIf this field contains a relative resource name, you can assume the name is\nrelative to `//tracing.googleapis.com`. Example:\n`projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`"
        },
        "insert_id": {
          "type": "string",
          "description": "A unique ID for the log entry used for deduplication. If omitted,\nthe implementation will generate one based on operation_id."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A set of user-defined (key, value) data that provides additional\ninformation about the log entry."
        },
        "proto_payload": {
          "$ref": "#/definitions/protobufAny",
          "description": "The log entry payload, represented as a protocol buffer that is\nexpressed as a JSON object. The only accepted type currently is\n[AuditLog][google.cloud.audit.AuditLog]."
        },
        "text_payload": {
          "type": "string",
          "description": "The log entry payload, represented as a Unicode string (UTF-8)."
        },
        "struct_payload": {
          "type": "object",
          "description": "The log entry payload, represented as a structure that\nis expressed as a JSON object."
        },
        "operation": {
          "$ref": "#/definitions/v1LogEntryOperation",
          "description": "Optional. Information about an operation associated with the log entry, if\napplicable."
        },
        "source_location": {
          "$ref": "#/definitions/v1LogEntrySourceLocation",
          "description": "Optional. Source code location information associated with the log entry,\nif any."
        }
      },
      "description": "An individual log entry."
    },
    "v1LogEntryOperation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Optional. An arbitrary operation identifier. Log entries with the\nsame identifier are assumed to be part of the same operation."
        },
        "producer": {
          "type": "string",
          "description": "Optional. An arbitrary producer identifier. The combination of\n`id` and `producer` must be globally unique.  Examples for `producer`:\n`\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`."
        },
        "first": {
          "type": "boolean",
          "description": "Optional. Set this to True if this is the first log entry in the operation."
        },
        "last": {
          "type": "boolean",
          "description": "Optional. Set this to True if this is the last log entry in the operation."
        }
      },
      "description": "Additional information about a potentially long-running operation with which\na log entry is associated."
    },
    "v1LogEntrySourceLocation": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "description": "Optional. Source file name. Depending on the runtime environment, this\nmight be a simple name or a fully-qualified name."
        },
        "line": {
          "type": "string",
          "format": "int64",
          "description": "Optional. Line within the source file. 1-based; 0 indicates no line number\navailable."
        },
        "function": {
          "type": "string",
          "description": "Optional. Human-readable name of the function or method being invoked, with\noptional context such as the class or package name. This information may be\nused in contexts such as the logs viewer, where a file and line number are\nless meaningful. The format can vary by language. For example:\n`qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`\n(Python)."
        }
      },
      "description": "Additional information about the source code location that produced the log\nentry."
    },
    "v1MetricValue": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels describing the metric value.\nSee comments on [google.api.servicecontrol.v1.Operation.labels][google.api.servicecontrol.v1.Operation.labels] for\nthe overriding relationship.\nNote that this map must not contain monitored resource labels."
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "The start of the time period over which this metric value's measurement\napplies. The time period has different semantics for different metric\ntypes (cumulative, delta, and gauge). See the metric definition\ndocumentation in the service configuration for details. If not specified,\n[google.api.servicecontrol.v1.Operation.start_time][google.api.servicecontrol.v1.Operation.start_time] will be used."
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "description": "The end of the time period over which this metric value's measurement\napplies.  If not specified,\n[google.api.servicecontrol.v1.Operation.end_time][google.api.servicecontrol.v1.Operation.end_time] will be used."
        },
        "bool_value": {
          "type": "boolean",
          "description": "A boolean value."
        },
        "int64_value": {
          "type": "string",
          "format": "int64",
          "description": "A signed 64-bit integer value."
        },
        "double_value": {
          "type": "number",
          "format": "double",
          "description": "A double precision floating point value."
        },
        "string_value": {
          "type": "string",
          "description": "A text string value."
        },
        "distribution_value": {
          "$ref": "#/definitions/servicecontrolv1Distribution",
          "description": "A distribution value."
        }
      },
      "description": "Represents a single metric value."
    },
    "v1MetricValueSet": {
      "type": "object",
      "properties": {
        "metric_name": {
          "type": "string",
          "description": "The metric name defined in the service configuration."
        },
        "metric_values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricValue"
          },
          "description": "The values in this metric."
        }
      },
      "description": "Represents a set of metric values in the same metric.\nEach metric value in the set should have a unique combination of start time,\nend time, and label values."
    },
    "v1Operation": {
      "type": "object",
      "properties": {
        "operation_id": {
          "type": "string",
          "description": "Identity of the operation. This must be unique within the scope of the\nservice that generated the operation. If the service calls\nCheck() and Report() on the same operation, the two calls should carry\nthe same id.\n\nUUID version 4 is recommended, though not required.\nIn scenarios where an operation is computed from existing information\nand an idempotent id is desirable for deduplication purpose, UUID version 5\nis recommended. See RFC 4122 for details."
        },
        "operation_name": {
          "type": "string",
          "description": "Fully qualified name of the operation. Reserved for future use."
        },
        "consumer_id": {
          "type": "string",
          "description": "Identity of the consumer who is using the service.\nThis field should be filled in for the operations initiated by a\nconsumer, but not for service-initiated operations that are\nnot related to a specific consumer.\n\n- This can be in one of the following formats:\n    - project:PROJECT_ID,\n    - project`_`number:PROJECT_NUMBER,\n    - projects/PROJECT_ID or PROJECT_NUMBER,\n    - folders/FOLDER_NUMBER,\n    - organizations/ORGANIZATION_NUMBER,\n    - api`_`key:API_KEY."
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Required. Start time of the operation."
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the operation.\nRequired when the operation is used in\n[ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],\nbut optional when the operation is used in\n[ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check]."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "- Labels describing monitored resources as defined in\n  the service configuration.\n- Default labels of metric values. When specified, labels defined in the\n  metric value override these default.\n- The following labels defined by Google Cloud Platform:\n    - `cloud.googleapis.com/location` describing the location where the\n       operation happened,\n    - `servicecontrol.googleapis.com/user_agent` describing the user agent\n       of the API request,\n    - `servicecontrol.googleapis.com/service_agent` describing the service\n       used to handle the API request (e.g. ESP),\n    - `servicecontrol.googleapis.com/platform` describing the platform\n       where the API is served, such as App Engine, Compute Engine, or\n       Kubernetes Engine.",
          "title": "Labels describing the operation. Only the following labels are allowed:"
        },
        "metric_value_sets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricValueSet"
          },
          "description": "Represents information about this operation. Each MetricValueSet\ncorresponds to a metric defined in the service configuration.\nThe data type used in the MetricValueSet must agree with\nthe data type specified in the metric definition.\n\nWithin a single operation, it is not allowed to have more than one\nMetricValue instances that have the same metric names and identical\nlabel value combinations. If a request has such duplicated MetricValue\ninstances, the entire request is rejected with\nan invalid argument error."
        },
        "log_entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LogEntry"
          },
          "description": "Represents information to be logged."
        },
        "importance": {
          "$ref": "#/definitions/OperationImportance",
          "description": "DO NOT USE. This is an experimental field."
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "Unimplemented."
        }
      },
      "description": "Represents information regarding an operation."
    },
    "v1ReportResponse": {
      "type": "object",
      "properties": {
        "report_errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ReportResponseReportError"
          },
          "description": "1. The combination of a successful RPC status and an empty `report_errors`\n   list indicates a complete success where all `Operations` in the\n   request are processed successfully.\n2. The combination of a successful RPC status and a non-empty\n   `report_errors` list indicates a partial success where some\n   `Operations` in the request succeeded. Each\n   `Operation` that failed processing has a corresponding item\n   in this list.\n3. A failed RPC status indicates a general non-deterministic failure.\n   When this happens, it's impossible to know which of the\n   'Operations' in the request succeeded or failed.",
          "title": "Partial failures, one for each `Operation` in the request that failed\nprocessing. There are three possible combinations of the RPC status:"
        },
        "service_config_id": {
          "type": "string",
          "description": "The actual config id used to process the request."
        },
        "service_rollout_id": {
          "type": "string",
          "description": "The current service rollout id used to process the request."
        }
      },
      "description": "Response message for the Report method."
    }
  }
}
