{
  "swagger": "2.0",
  "info": {
    "title": "google/logging/v2/logging_config.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ConfigServiceV2"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/entries:copy": {
      "post": {
        "summary": "Copies a set of log entries from a log bucket to a Cloud Storage bucket.",
        "operationId": "CopyLogEntries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The parameters to CopyLogEntries.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CopyLogEntriesRequest"
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_10}": {
      "get": {
        "summary": "Gets a link.",
        "operationId": "GetLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Link"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_10",
            "description": "Required. The resource name of the link:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a link. This will also delete the corresponding BigQuery linked\ndataset.",
        "operationId": "DeleteLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_10",
            "description": "Required. The full resource name of the link to delete.\n\n \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Changes one or more properties of an existing exclusion in the _Default\nsink.",
        "operationId": "UpdateExclusion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_10",
            "description": "Required. The resource name of the exclusion to update:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/exclusions/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. New values for the existing exclusion. Only the fields specified\nin `update_mask` are relevant.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_11}": {
      "get": {
        "summary": "Gets a link.",
        "operationId": "GetLink2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Link"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_11",
            "description": "Required. The resource name of the link:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a link. This will also delete the corresponding BigQuery linked\ndataset.",
        "operationId": "DeleteLink2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_11",
            "description": "Required. The full resource name of the link to delete.\n\n \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Changes one or more properties of an existing exclusion in the _Default\nsink.",
        "operationId": "UpdateExclusion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_11",
            "description": "Required. The resource name of the exclusion to update:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/exclusions/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. New values for the existing exclusion. Only the fields specified\nin `update_mask` are relevant.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_12}": {
      "get": {
        "summary": "Gets a link.",
        "operationId": "GetLink3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Link"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_12",
            "description": "Required. The resource name of the link:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a link. This will also delete the corresponding BigQuery linked\ndataset.",
        "operationId": "DeleteLink3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_12",
            "description": "Required. The full resource name of the link to delete.\n\n \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Changes one or more properties of an existing exclusion in the _Default\nsink.",
        "operationId": "UpdateExclusion3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_12",
            "description": "Required. The resource name of the exclusion to update:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/exclusions/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. New values for the existing exclusion. Only the fields specified\nin `update_mask` are relevant.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_13}": {
      "get": {
        "summary": "Gets a link.",
        "operationId": "GetLink4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Link"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_13",
            "description": "Required. The resource name of the link:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a link. This will also delete the corresponding BigQuery linked\ndataset.",
        "operationId": "DeleteLink4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_13",
            "description": "Required. The full resource name of the link to delete.\n\n \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Changes one or more properties of an existing exclusion in the _Default\nsink.",
        "operationId": "UpdateExclusion4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_13",
            "description": "Required. The resource name of the exclusion to update:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/exclusions/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. New values for the existing exclusion. Only the fields specified\nin `update_mask` are relevant.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_14}": {
      "get": {
        "summary": "Gets a link.",
        "operationId": "GetLink5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Link"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_14",
            "description": "Required. The resource name of the link:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a link. This will also delete the corresponding BigQuery linked\ndataset.",
        "operationId": "DeleteLink5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_14",
            "description": "Required. The full resource name of the link to delete.\n\n \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+/links/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Changes one or more properties of an existing exclusion in the _Default\nsink.",
        "operationId": "UpdateExclusion5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_14",
            "description": "Required. The resource name of the exclusion to update:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/exclusions/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. New values for the existing exclusion. Only the fields specified\nin `update_mask` are relevant.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_15}": {
      "get": {
        "summary": "Gets the description of an exclusion in the _Default sink.",
        "operationId": "GetExclusion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_15",
            "description": "Required. The resource name of an existing exclusion:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes an exclusion in the _Default sink.",
        "operationId": "DeleteExclusion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_15",
            "description": "Required. The resource name of an existing exclusion to delete:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_16}": {
      "get": {
        "summary": "Gets the description of an exclusion in the _Default sink.",
        "operationId": "GetExclusion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_16",
            "description": "Required. The resource name of an existing exclusion:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes an exclusion in the _Default sink.",
        "operationId": "DeleteExclusion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_16",
            "description": "Required. The resource name of an existing exclusion to delete:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_17}": {
      "get": {
        "summary": "Gets the description of an exclusion in the _Default sink.",
        "operationId": "GetExclusion3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_17",
            "description": "Required. The resource name of an existing exclusion:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes an exclusion in the _Default sink.",
        "operationId": "DeleteExclusion3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_17",
            "description": "Required. The resource name of an existing exclusion to delete:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_18}": {
      "get": {
        "summary": "Gets the description of an exclusion in the _Default sink.",
        "operationId": "GetExclusion4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_18",
            "description": "Required. The resource name of an existing exclusion:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes an exclusion in the _Default sink.",
        "operationId": "DeleteExclusion4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_18",
            "description": "Required. The resource name of an existing exclusion to delete:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_19}": {
      "get": {
        "summary": "Gets the description of an exclusion in the _Default sink.",
        "operationId": "GetExclusion5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_19",
            "description": "Required. The resource name of an existing exclusion:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes an exclusion in the _Default sink.",
        "operationId": "DeleteExclusion5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_19",
            "description": "Required. The resource name of an existing exclusion to delete:\n\n    \"projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]\"\n    \"folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/exclusions/my-exclusion\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/exclusions/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_1}": {
      "get": {
        "summary": "Gets a log bucket.",
        "operationId": "GetBucket2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The resource name of the bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a log bucket.",
        "description": "Changes the bucket's `lifecycle_state` to the `DELETE_REQUESTED` state.\nAfter 7 days, the bucket will be purged and all log entries in the bucket\nwill be permanently deleted.",
        "operationId": "DeleteBucket2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The full resource name of the bucket to delete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a log bucket.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucket2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_1}/cmekSettings": {
      "get": {
        "summary": "Gets the Logging CMEK settings for the given resource.",
        "description": "Note: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetCmekSettings2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CmekSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The resource for which to retrieve CMEK settings.\n\n    \"projects/[PROJECT_ID]/cmekSettings\"\n    \"organizations/[ORGANIZATION_ID]/cmekSettings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings\"\n    \"folders/[FOLDER_ID]/cmekSettings\"\n\nFor example:\n\n  `\"organizations/12345/cmekSettings\"`\n\nNote: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates the Log Router CMEK settings for the given resource.",
        "description": "Note: CMEK for the Log Router can currently only be configured for Google\nCloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.\n\n[UpdateCmekSettings][google.logging.v2.ConfigServiceV2.UpdateCmekSettings]\nwill fail if 1) `kms_key_name` is invalid, or 2) the associated service\naccount does not have the required\n`roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key, or\n3) access to the key is disabled.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "UpdateCmekSettings2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CmekSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The resource name for the CMEK settings to update.\n\n    \"projects/[PROJECT_ID]/cmekSettings\"\n    \"organizations/[ORGANIZATION_ID]/cmekSettings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings\"\n    \"folders/[FOLDER_ID]/cmekSettings\"\n\nFor example:\n\n  `\"organizations/12345/cmekSettings\"`\n\nNote: CMEK for the Log Router can currently only be configured for Google\nCloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          },
          {
            "name": "cmek_settings",
            "description": "Required. The CMEK settings to update.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CmekSettings",
              "required": [
                "cmek_settings"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_1}/settings": {
      "get": {
        "summary": "Gets the Log Router settings for the given resource.",
        "description": "Note: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetSettings2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Settings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The resource for which to retrieve settings.\n\n    \"projects/[PROJECT_ID]/settings\"\n    \"organizations/[ORGANIZATION_ID]/settings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/settings\"\n    \"folders/[FOLDER_ID]/settings\"\n\nFor example:\n\n  `\"organizations/12345/settings\"`\n\nNote: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates the Log Router settings for the given resource.",
        "description": "Note: Settings for the Log Router can currently only be configured for\nGoogle Cloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.\n\n[UpdateSettings][google.logging.v2.ConfigServiceV2.UpdateSettings]\nwill fail if 1) `kms_key_name` is invalid, or 2) the associated service\naccount does not have the required\n`roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key, or\n3) access to the key is disabled. 4) `location_id` is not supported by\nLogging. 5) `location_id` violate OrgPolicy.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "UpdateSettings2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Settings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The resource name for the settings to update.\n\n    \"organizations/[ORGANIZATION_ID]/settings\"\n\nFor example:\n\n  `\"organizations/12345/settings\"`\n\nNote: Settings for the Log Router can currently only be configured for\nGoogle Cloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          },
          {
            "name": "settings",
            "description": "Required. The settings to update.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2Settings",
              "required": [
                "settings"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_1}:undelete": {
      "post": {
        "summary": "Undeletes a log bucket. A bucket that has been deleted can be undeleted\nwithin the grace period of 7 days.",
        "operationId": "UndeleteBucket2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The full resource name of the bucket to undelete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigServiceV2UndeleteBucketBody"
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_1}:updateAsync": {
      "post": {
        "summary": "Updates a log bucket asynchronously.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucketAsync2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "update_mask",
            "description": "Required. Field mask that specifies the fields in `bucket` that need an\nupdate. A bucket field will be overwritten if, and only if, it is in the\nupdate mask. `name` and output only fields cannot be updated.\n\nFor a detailed `FieldMask` definition, see:\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=retention_days`",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_2}": {
      "get": {
        "summary": "Gets a log bucket.",
        "operationId": "GetBucket3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "Required. The resource name of the bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a log bucket.",
        "description": "Changes the bucket's `lifecycle_state` to the `DELETE_REQUESTED` state.\nAfter 7 days, the bucket will be purged and all log entries in the bucket\nwill be permanently deleted.",
        "operationId": "DeleteBucket3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "Required. The full resource name of the bucket to delete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a log bucket.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucket3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_2}/cmekSettings": {
      "get": {
        "summary": "Gets the Logging CMEK settings for the given resource.",
        "description": "Note: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetCmekSettings3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CmekSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "Required. The resource for which to retrieve CMEK settings.\n\n    \"projects/[PROJECT_ID]/cmekSettings\"\n    \"organizations/[ORGANIZATION_ID]/cmekSettings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings\"\n    \"folders/[FOLDER_ID]/cmekSettings\"\n\nFor example:\n\n  `\"organizations/12345/cmekSettings\"`\n\nNote: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_2}/settings": {
      "get": {
        "summary": "Gets the Log Router settings for the given resource.",
        "description": "Note: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetSettings3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Settings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "Required. The resource for which to retrieve settings.\n\n    \"projects/[PROJECT_ID]/settings\"\n    \"organizations/[ORGANIZATION_ID]/settings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/settings\"\n    \"folders/[FOLDER_ID]/settings\"\n\nFor example:\n\n  `\"organizations/12345/settings\"`\n\nNote: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates the Log Router settings for the given resource.",
        "description": "Note: Settings for the Log Router can currently only be configured for\nGoogle Cloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.\n\n[UpdateSettings][google.logging.v2.ConfigServiceV2.UpdateSettings]\nwill fail if 1) `kms_key_name` is invalid, or 2) the associated service\naccount does not have the required\n`roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key, or\n3) access to the key is disabled. 4) `location_id` is not supported by\nLogging. 5) `location_id` violate OrgPolicy.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "UpdateSettings3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Settings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "Required. The resource name for the settings to update.\n\n    \"organizations/[ORGANIZATION_ID]/settings\"\n\nFor example:\n\n  `\"organizations/12345/settings\"`\n\nNote: Settings for the Log Router can currently only be configured for\nGoogle Cloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+"
          },
          {
            "name": "settings",
            "description": "Required. The settings to update.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2Settings",
              "required": [
                "settings"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_2}:undelete": {
      "post": {
        "summary": "Undeletes a log bucket. A bucket that has been deleted can be undeleted\nwithin the grace period of 7 days.",
        "operationId": "UndeleteBucket3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "Required. The full resource name of the bucket to undelete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigServiceV2UndeleteBucketBody"
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_2}:updateAsync": {
      "post": {
        "summary": "Updates a log bucket asynchronously.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucketAsync3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "update_mask",
            "description": "Required. Field mask that specifies the fields in `bucket` that need an\nupdate. A bucket field will be overwritten if, and only if, it is in the\nupdate mask. `name` and output only fields cannot be updated.\n\nFor a detailed `FieldMask` definition, see:\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=retention_days`",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_3}": {
      "get": {
        "summary": "Gets a log bucket.",
        "operationId": "GetBucket4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_3",
            "description": "Required. The resource name of the bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a log bucket.",
        "description": "Changes the bucket's `lifecycle_state` to the `DELETE_REQUESTED` state.\nAfter 7 days, the bucket will be purged and all log entries in the bucket\nwill be permanently deleted.",
        "operationId": "DeleteBucket4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_3",
            "description": "Required. The full resource name of the bucket to delete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a log bucket.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucket4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_3",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_3}/cmekSettings": {
      "get": {
        "summary": "Gets the Logging CMEK settings for the given resource.",
        "description": "Note: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetCmekSettings4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CmekSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_3",
            "description": "Required. The resource for which to retrieve CMEK settings.\n\n    \"projects/[PROJECT_ID]/cmekSettings\"\n    \"organizations/[ORGANIZATION_ID]/cmekSettings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings\"\n    \"folders/[FOLDER_ID]/cmekSettings\"\n\nFor example:\n\n  `\"organizations/12345/cmekSettings\"`\n\nNote: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_3}/settings": {
      "get": {
        "summary": "Gets the Log Router settings for the given resource.",
        "description": "Note: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetSettings4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Settings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_3",
            "description": "Required. The resource for which to retrieve settings.\n\n    \"projects/[PROJECT_ID]/settings\"\n    \"organizations/[ORGANIZATION_ID]/settings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/settings\"\n    \"folders/[FOLDER_ID]/settings\"\n\nFor example:\n\n  `\"organizations/12345/settings\"`\n\nNote: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_3}:undelete": {
      "post": {
        "summary": "Undeletes a log bucket. A bucket that has been deleted can be undeleted\nwithin the grace period of 7 days.",
        "operationId": "UndeleteBucket4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_3",
            "description": "Required. The full resource name of the bucket to undelete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigServiceV2UndeleteBucketBody"
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_3}:updateAsync": {
      "post": {
        "summary": "Updates a log bucket asynchronously.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucketAsync4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_3",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "update_mask",
            "description": "Required. Field mask that specifies the fields in `bucket` that need an\nupdate. A bucket field will be overwritten if, and only if, it is in the\nupdate mask. `name` and output only fields cannot be updated.\n\nFor a detailed `FieldMask` definition, see:\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=retention_days`",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_4}": {
      "get": {
        "summary": "Gets a log bucket.",
        "operationId": "GetBucket5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_4",
            "description": "Required. The resource name of the bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a log bucket.",
        "description": "Changes the bucket's `lifecycle_state` to the `DELETE_REQUESTED` state.\nAfter 7 days, the bucket will be purged and all log entries in the bucket\nwill be permanently deleted.",
        "operationId": "DeleteBucket5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_4",
            "description": "Required. The full resource name of the bucket to delete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a log bucket.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucket5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_4",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_4}/cmekSettings": {
      "get": {
        "summary": "Gets the Logging CMEK settings for the given resource.",
        "description": "Note: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetCmekSettings5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CmekSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_4",
            "description": "Required. The resource for which to retrieve CMEK settings.\n\n    \"projects/[PROJECT_ID]/cmekSettings\"\n    \"organizations/[ORGANIZATION_ID]/cmekSettings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings\"\n    \"folders/[FOLDER_ID]/cmekSettings\"\n\nFor example:\n\n  `\"organizations/12345/cmekSettings\"`\n\nNote: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_4}/settings": {
      "get": {
        "summary": "Gets the Log Router settings for the given resource.",
        "description": "Note: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetSettings5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Settings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_4",
            "description": "Required. The resource for which to retrieve settings.\n\n    \"projects/[PROJECT_ID]/settings\"\n    \"organizations/[ORGANIZATION_ID]/settings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/settings\"\n    \"folders/[FOLDER_ID]/settings\"\n\nFor example:\n\n  `\"organizations/12345/settings\"`\n\nNote: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_4}:undelete": {
      "post": {
        "summary": "Undeletes a log bucket. A bucket that has been deleted can be undeleted\nwithin the grace period of 7 days.",
        "operationId": "UndeleteBucket5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_4",
            "description": "Required. The full resource name of the bucket to undelete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigServiceV2UndeleteBucketBody"
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_4}:updateAsync": {
      "post": {
        "summary": "Updates a log bucket asynchronously.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucketAsync5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_4",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "update_mask",
            "description": "Required. Field mask that specifies the fields in `bucket` that need an\nupdate. A bucket field will be overwritten if, and only if, it is in the\nupdate mask. `name` and output only fields cannot be updated.\n\nFor a detailed `FieldMask` definition, see:\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=retention_days`",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_5}": {
      "get": {
        "summary": "Gets a view on a log bucket..",
        "operationId": "GetView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_5",
            "description": "Required. The resource name of the policy:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a view on a log bucket.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can delete the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "DeleteView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_5",
            "description": "Required. The full resource name of the view to delete:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n   `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a view on a log bucket. This method replaces the following fields\nin the existing view with values from the new view: `filter`.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can update the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "UpdateView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_5",
            "description": "Required. The full resource name of the view to update\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The updated view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_6}": {
      "get": {
        "summary": "Gets a view on a log bucket..",
        "operationId": "GetView2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_6",
            "description": "Required. The resource name of the policy:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a view on a log bucket.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can delete the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "DeleteView2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_6",
            "description": "Required. The full resource name of the view to delete:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n   `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a view on a log bucket. This method replaces the following fields\nin the existing view with values from the new view: `filter`.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can update the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "UpdateView2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_6",
            "description": "Required. The full resource name of the view to update\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The updated view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_7}": {
      "get": {
        "summary": "Gets a view on a log bucket..",
        "operationId": "GetView3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_7",
            "description": "Required. The resource name of the policy:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a view on a log bucket.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can delete the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "DeleteView3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_7",
            "description": "Required. The full resource name of the view to delete:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n   `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a view on a log bucket. This method replaces the following fields\nin the existing view with values from the new view: `filter`.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can update the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "UpdateView3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_7",
            "description": "Required. The full resource name of the view to update\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The updated view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_8}": {
      "get": {
        "summary": "Gets a view on a log bucket..",
        "operationId": "GetView4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_8",
            "description": "Required. The resource name of the policy:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a view on a log bucket.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can delete the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "DeleteView4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_8",
            "description": "Required. The full resource name of the view to delete:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n   `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a view on a log bucket. This method replaces the following fields\nin the existing view with values from the new view: `filter`.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can update the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "UpdateView4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_8",
            "description": "Required. The full resource name of the view to update\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The updated view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name_9}": {
      "get": {
        "summary": "Gets a view on a log bucket..",
        "operationId": "GetView5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_9",
            "description": "Required. The resource name of the policy:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a view on a log bucket.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can delete the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "DeleteView5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_9",
            "description": "Required. The full resource name of the view to delete:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n   `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a view on a log bucket. This method replaces the following fields\nin the existing view with values from the new view: `filter`.\nIf an `UNAVAILABLE` error is returned, this indicates that system is not in\na state where it can update the view. If this occurs, please try again in a\nfew minutes.",
        "operationId": "UpdateView5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_9",
            "description": "Required. The full resource name of the view to update\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket/views/my-view\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+/views/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The updated view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name}": {
      "get": {
        "summary": "Gets a log bucket.",
        "operationId": "GetBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The resource name of the bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a log bucket.",
        "description": "Changes the bucket's `lifecycle_state` to the `DELETE_REQUESTED` state.\nAfter 7 days, the bucket will be purged and all log entries in the bucket\nwill be permanently deleted.",
        "operationId": "DeleteBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The full resource name of the bucket to delete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a log bucket.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name}/cmekSettings": {
      "get": {
        "summary": "Gets the Logging CMEK settings for the given resource.",
        "description": "Note: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetCmekSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CmekSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The resource for which to retrieve CMEK settings.\n\n    \"projects/[PROJECT_ID]/cmekSettings\"\n    \"organizations/[ORGANIZATION_ID]/cmekSettings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings\"\n    \"folders/[FOLDER_ID]/cmekSettings\"\n\nFor example:\n\n  `\"organizations/12345/cmekSettings\"`\n\nNote: CMEK for the Log Router can be configured for Google Cloud projects,\nfolders, organizations and billing accounts. Once configured for an\norganization, it applies to all projects and folders in the Google Cloud\norganization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates the Log Router CMEK settings for the given resource.",
        "description": "Note: CMEK for the Log Router can currently only be configured for Google\nCloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.\n\n[UpdateCmekSettings][google.logging.v2.ConfigServiceV2.UpdateCmekSettings]\nwill fail if 1) `kms_key_name` is invalid, or 2) the associated service\naccount does not have the required\n`roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key, or\n3) access to the key is disabled.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "UpdateCmekSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CmekSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The resource name for the CMEK settings to update.\n\n    \"projects/[PROJECT_ID]/cmekSettings\"\n    \"organizations/[ORGANIZATION_ID]/cmekSettings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings\"\n    \"folders/[FOLDER_ID]/cmekSettings\"\n\nFor example:\n\n  `\"organizations/12345/cmekSettings\"`\n\nNote: CMEK for the Log Router can currently only be configured for Google\nCloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+"
          },
          {
            "name": "cmek_settings",
            "description": "Required. The CMEK settings to update.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CmekSettings",
              "required": [
                "cmek_settings"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name}/settings": {
      "get": {
        "summary": "Gets the Log Router settings for the given resource.",
        "description": "Note: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "GetSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Settings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The resource for which to retrieve settings.\n\n    \"projects/[PROJECT_ID]/settings\"\n    \"organizations/[ORGANIZATION_ID]/settings\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/settings\"\n    \"folders/[FOLDER_ID]/settings\"\n\nFor example:\n\n  `\"organizations/12345/settings\"`\n\nNote: Settings for the Log Router can be get for Google Cloud projects,\nfolders, organizations and billing accounts. Currently it can only be\nconfigured for organizations. Once configured for an organization, it\napplies to all projects and folders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates the Log Router settings for the given resource.",
        "description": "Note: Settings for the Log Router can currently only be configured for\nGoogle Cloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.\n\n[UpdateSettings][google.logging.v2.ConfigServiceV2.UpdateSettings]\nwill fail if 1) `kms_key_name` is invalid, or 2) the associated service\naccount does not have the required\n`roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key, or\n3) access to the key is disabled. 4) `location_id` is not supported by\nLogging. 5) `location_id` violate OrgPolicy.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
        "operationId": "UpdateSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2Settings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The resource name for the settings to update.\n\n    \"organizations/[ORGANIZATION_ID]/settings\"\n\nFor example:\n\n  `\"organizations/12345/settings\"`\n\nNote: Settings for the Log Router can currently only be configured for\nGoogle Cloud organizations. Once configured, it applies to all projects and\nfolders in the Google Cloud organization.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+"
          },
          {
            "name": "settings",
            "description": "Required. The settings to update.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2Settings",
              "required": [
                "settings"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name}:undelete": {
      "post": {
        "summary": "Undeletes a log bucket. A bucket that has been deleted can be undeleted\nwithin the grace period of 7 days.",
        "operationId": "UndeleteBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The full resource name of the bucket to undelete.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigServiceV2UndeleteBucketBody"
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{name}:updateAsync": {
      "post": {
        "summary": "Updates a log bucket asynchronously.",
        "description": "If the bucket has a `lifecycle_state` of `DELETE_REQUESTED`, then\n`FAILED_PRECONDITION` will be returned.\n\nAfter a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "UpdateBucketAsync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Required. The full resource name of the bucket to update.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The updated bucket.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "update_mask",
            "description": "Required. Field mask that specifies the fields in `bucket` that need an\nupdate. A bucket field will be overwritten if, and only if, it is in the\nupdate mask. `name` and output only fields cannot be updated.\n\nFor a detailed `FieldMask` definition, see:\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=retention_days`",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_1}/buckets": {
      "get": {
        "summary": "Lists log buckets.",
        "operationId": "ListBuckets2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The parent resource whose buckets are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]\"\n\nNote: The locations portion of the resource must be specified, but\nsupplying the character `-` in place of [LOCATION_ID] will return all\nbuckets.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a log bucket that can be used to store log entries. After a bucket\nhas been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucket2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_1}/buckets:createAsync": {
      "post": {
        "summary": "Creates a log bucket asynchronously that can be used to store log entries.",
        "description": "After a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucketAsync2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_1}/exclusions": {
      "get": {
        "summary": "Lists all the exclusions on the _Default sink in a parent resource.",
        "operationId": "ListExclusions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListExclusionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The parent resource whose exclusions are to be listed.\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a new exclusion in the _Default sink in a specified parent\nresource. Only log entries belonging to that resource can be excluded. You\ncan have up to 10 exclusions in a resource.",
        "operationId": "CreateExclusion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The parent resource in which to create the exclusion:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-logging-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. The new exclusion, whose `name` parameter is an exclusion name\nthat is not already used in the parent resource.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_1}/links": {
      "get": {
        "summary": "Lists links.",
        "operationId": "ListLinks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The parent resource whose links are to be listed:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Asynchronously creates a linked dataset in BigQuery which makes it possible\nto use BigQuery to read the logs stored in the log bucket. A log bucket may\ncurrently only contain one link.",
        "operationId": "CreateLink2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The full resource name of the bucket to create a link for.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "link",
            "description": "Required. The new link.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2Link",
              "required": [
                "link"
              ]
            }
          },
          {
            "name": "link_id",
            "description": "Required. The ID to use for the link. The link_id can have up to 100\ncharacters. A valid link_id must only have alphanumeric characters and\nunderscores within it.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_1}/sinks": {
      "get": {
        "summary": "Lists sinks.",
        "operationId": "ListSinks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListSinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The parent resource whose sinks are to be listed:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a sink that exports specified log entries to a destination. The\nexport of newly-ingested log entries begins immediately, unless the sink's\n`writer_identity` is not permitted to write to the destination. A sink can\nexport log entries only from the resource owning the sink.",
        "operationId": "CreateSink2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The resource in which to create the sink:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The new sink, whose `name` parameter is a sink identifier that\nis not already in use.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. Determines the kind of IAM identity returned as `writer_identity`\nin the new sink. If this value is omitted or set to false, and if the\nsink's parent is a project, then the value returned as `writer_identity` is\nthe same group or service account used by Cloud Logging before the addition\nof writer identities to this API. The sink's destination must be in the\nsame project as the sink itself.\n\nIf this field is set to true, or if the sink is owned by a non-project\nresource such as an organization, then the value of `writer_identity` will\nbe a unique service account used only for exports from the new sink. For\nmore information, see `writer_identity` in\n[LogSink][google.logging.v2.LogSink].",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_1}/views": {
      "get": {
        "summary": "Lists views on a log bucket.",
        "operationId": "ListViews2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListViewsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The bucket whose views are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\n\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a view over log entries in a log bucket. A bucket may contain a\nmaximum of 30 views.",
        "operationId": "CreateView2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_1",
            "description": "Required. The bucket in which to create the view\n\n    `\"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"`\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The new view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          },
          {
            "name": "view_id",
            "description": "Required. A client-assigned identifier such as `\"my-view\"`. Identifiers are\nlimited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_2}/buckets": {
      "get": {
        "summary": "Lists log buckets.",
        "operationId": "ListBuckets3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The parent resource whose buckets are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]\"\n\nNote: The locations portion of the resource must be specified, but\nsupplying the character `-` in place of [LOCATION_ID] will return all\nbuckets.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a log bucket that can be used to store log entries. After a bucket\nhas been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucket3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_2}/buckets:createAsync": {
      "post": {
        "summary": "Creates a log bucket asynchronously that can be used to store log entries.",
        "description": "After a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucketAsync3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_2}/exclusions": {
      "get": {
        "summary": "Lists all the exclusions on the _Default sink in a parent resource.",
        "operationId": "ListExclusions3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListExclusionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The parent resource whose exclusions are to be listed.\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a new exclusion in the _Default sink in a specified parent\nresource. Only log entries belonging to that resource can be excluded. You\ncan have up to 10 exclusions in a resource.",
        "operationId": "CreateExclusion3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The parent resource in which to create the exclusion:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-logging-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. The new exclusion, whose `name` parameter is an exclusion name\nthat is not already used in the parent resource.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_2}/links": {
      "get": {
        "summary": "Lists links.",
        "operationId": "ListLinks3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The parent resource whose links are to be listed:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Asynchronously creates a linked dataset in BigQuery which makes it possible\nto use BigQuery to read the logs stored in the log bucket. A log bucket may\ncurrently only contain one link.",
        "operationId": "CreateLink3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The full resource name of the bucket to create a link for.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "link",
            "description": "Required. The new link.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2Link",
              "required": [
                "link"
              ]
            }
          },
          {
            "name": "link_id",
            "description": "Required. The ID to use for the link. The link_id can have up to 100\ncharacters. A valid link_id must only have alphanumeric characters and\nunderscores within it.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_2}/sinks": {
      "get": {
        "summary": "Lists sinks.",
        "operationId": "ListSinks3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListSinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The parent resource whose sinks are to be listed:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a sink that exports specified log entries to a destination. The\nexport of newly-ingested log entries begins immediately, unless the sink's\n`writer_identity` is not permitted to write to the destination. A sink can\nexport log entries only from the resource owning the sink.",
        "operationId": "CreateSink3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The resource in which to create the sink:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The new sink, whose `name` parameter is a sink identifier that\nis not already in use.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. Determines the kind of IAM identity returned as `writer_identity`\nin the new sink. If this value is omitted or set to false, and if the\nsink's parent is a project, then the value returned as `writer_identity` is\nthe same group or service account used by Cloud Logging before the addition\nof writer identities to this API. The sink's destination must be in the\nsame project as the sink itself.\n\nIf this field is set to true, or if the sink is owned by a non-project\nresource such as an organization, then the value of `writer_identity` will\nbe a unique service account used only for exports from the new sink. For\nmore information, see `writer_identity` in\n[LogSink][google.logging.v2.LogSink].",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_2}/views": {
      "get": {
        "summary": "Lists views on a log bucket.",
        "operationId": "ListViews3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListViewsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The bucket whose views are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\n\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a view over log entries in a log bucket. A bucket may contain a\nmaximum of 30 views.",
        "operationId": "CreateView3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_2",
            "description": "Required. The bucket in which to create the view\n\n    `\"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"`\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The new view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          },
          {
            "name": "view_id",
            "description": "Required. A client-assigned identifier such as `\"my-view\"`. Identifiers are\nlimited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_3}/buckets": {
      "get": {
        "summary": "Lists log buckets.",
        "operationId": "ListBuckets4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The parent resource whose buckets are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]\"\n\nNote: The locations portion of the resource must be specified, but\nsupplying the character `-` in place of [LOCATION_ID] will return all\nbuckets.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a log bucket that can be used to store log entries. After a bucket\nhas been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucket4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_3}/buckets:createAsync": {
      "post": {
        "summary": "Creates a log bucket asynchronously that can be used to store log entries.",
        "description": "After a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucketAsync4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_3}/exclusions": {
      "get": {
        "summary": "Lists all the exclusions on the _Default sink in a parent resource.",
        "operationId": "ListExclusions4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListExclusionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The parent resource whose exclusions are to be listed.\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a new exclusion in the _Default sink in a specified parent\nresource. Only log entries belonging to that resource can be excluded. You\ncan have up to 10 exclusions in a resource.",
        "operationId": "CreateExclusion4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The parent resource in which to create the exclusion:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-logging-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. The new exclusion, whose `name` parameter is an exclusion name\nthat is not already used in the parent resource.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_3}/links": {
      "get": {
        "summary": "Lists links.",
        "operationId": "ListLinks4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The parent resource whose links are to be listed:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Asynchronously creates a linked dataset in BigQuery which makes it possible\nto use BigQuery to read the logs stored in the log bucket. A log bucket may\ncurrently only contain one link.",
        "operationId": "CreateLink4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The full resource name of the bucket to create a link for.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "link",
            "description": "Required. The new link.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2Link",
              "required": [
                "link"
              ]
            }
          },
          {
            "name": "link_id",
            "description": "Required. The ID to use for the link. The link_id can have up to 100\ncharacters. A valid link_id must only have alphanumeric characters and\nunderscores within it.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_3}/sinks": {
      "get": {
        "summary": "Lists sinks.",
        "operationId": "ListSinks4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListSinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The parent resource whose sinks are to be listed:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a sink that exports specified log entries to a destination. The\nexport of newly-ingested log entries begins immediately, unless the sink's\n`writer_identity` is not permitted to write to the destination. A sink can\nexport log entries only from the resource owning the sink.",
        "operationId": "CreateSink4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The resource in which to create the sink:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The new sink, whose `name` parameter is a sink identifier that\nis not already in use.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. Determines the kind of IAM identity returned as `writer_identity`\nin the new sink. If this value is omitted or set to false, and if the\nsink's parent is a project, then the value returned as `writer_identity` is\nthe same group or service account used by Cloud Logging before the addition\nof writer identities to this API. The sink's destination must be in the\nsame project as the sink itself.\n\nIf this field is set to true, or if the sink is owned by a non-project\nresource such as an organization, then the value of `writer_identity` will\nbe a unique service account used only for exports from the new sink. For\nmore information, see `writer_identity` in\n[LogSink][google.logging.v2.LogSink].",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_3}/views": {
      "get": {
        "summary": "Lists views on a log bucket.",
        "operationId": "ListViews4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListViewsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The bucket whose views are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\n\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a view over log entries in a log bucket. A bucket may contain a\nmaximum of 30 views.",
        "operationId": "CreateView4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_3",
            "description": "Required. The bucket in which to create the view\n\n    `\"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"`\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The new view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          },
          {
            "name": "view_id",
            "description": "Required. A client-assigned identifier such as `\"my-view\"`. Identifiers are\nlimited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_4}/buckets": {
      "get": {
        "summary": "Lists log buckets.",
        "operationId": "ListBuckets5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The parent resource whose buckets are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]\"\n\nNote: The locations portion of the resource must be specified, but\nsupplying the character `-` in place of [LOCATION_ID] will return all\nbuckets.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a log bucket that can be used to store log entries. After a bucket\nhas been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucket5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_4}/buckets:createAsync": {
      "post": {
        "summary": "Creates a log bucket asynchronously that can be used to store log entries.",
        "description": "After a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucketAsync5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_4}/exclusions": {
      "get": {
        "summary": "Lists all the exclusions on the _Default sink in a parent resource.",
        "operationId": "ListExclusions5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListExclusionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The parent resource whose exclusions are to be listed.\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a new exclusion in the _Default sink in a specified parent\nresource. Only log entries belonging to that resource can be excluded. You\ncan have up to 10 exclusions in a resource.",
        "operationId": "CreateExclusion5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The parent resource in which to create the exclusion:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-logging-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. The new exclusion, whose `name` parameter is an exclusion name\nthat is not already used in the parent resource.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_4}/links": {
      "get": {
        "summary": "Lists links.",
        "operationId": "ListLinks5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The parent resource whose links are to be listed:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Asynchronously creates a linked dataset in BigQuery which makes it possible\nto use BigQuery to read the logs stored in the log bucket. A log bucket may\ncurrently only contain one link.",
        "operationId": "CreateLink5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The full resource name of the bucket to create a link for.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "link",
            "description": "Required. The new link.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2Link",
              "required": [
                "link"
              ]
            }
          },
          {
            "name": "link_id",
            "description": "Required. The ID to use for the link. The link_id can have up to 100\ncharacters. A valid link_id must only have alphanumeric characters and\nunderscores within it.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_4}/sinks": {
      "get": {
        "summary": "Lists sinks.",
        "operationId": "ListSinks5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListSinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The parent resource whose sinks are to be listed:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a sink that exports specified log entries to a destination. The\nexport of newly-ingested log entries begins immediately, unless the sink's\n`writer_identity` is not permitted to write to the destination. A sink can\nexport log entries only from the resource owning the sink.",
        "operationId": "CreateSink5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The resource in which to create the sink:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The new sink, whose `name` parameter is a sink identifier that\nis not already in use.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. Determines the kind of IAM identity returned as `writer_identity`\nin the new sink. If this value is omitted or set to false, and if the\nsink's parent is a project, then the value returned as `writer_identity` is\nthe same group or service account used by Cloud Logging before the addition\nof writer identities to this API. The sink's destination must be in the\nsame project as the sink itself.\n\nIf this field is set to true, or if the sink is owned by a non-project\nresource such as an organization, then the value of `writer_identity` will\nbe a unique service account used only for exports from the new sink. For\nmore information, see `writer_identity` in\n[LogSink][google.logging.v2.LogSink].",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent_4}/views": {
      "get": {
        "summary": "Lists views on a log bucket.",
        "operationId": "ListViews5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListViewsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The bucket whose views are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\n\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a view over log entries in a log bucket. A bucket may contain a\nmaximum of 30 views.",
        "operationId": "CreateView5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_4",
            "description": "Required. The bucket in which to create the view\n\n    `\"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"`\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The new view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          },
          {
            "name": "view_id",
            "description": "Required. A client-assigned identifier such as `\"my-view\"`. Identifiers are\nlimited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent}/buckets": {
      "get": {
        "summary": "Lists log buckets.",
        "operationId": "ListBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The parent resource whose buckets are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]\"\n\nNote: The locations portion of the resource must be specified, but\nsupplying the character `-` in place of [LOCATION_ID] will return all\nbuckets.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a log bucket that can be used to store log entries. After a bucket\nhas been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent}/buckets:createAsync": {
      "post": {
        "summary": "Creates a log bucket asynchronously that can be used to store log entries.",
        "description": "After a bucket has been created, the bucket's location cannot be changed.",
        "operationId": "CreateBucketAsync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The resource in which to create the log bucket:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]\"\n\nFor example:\n\n  `\"projects/my-project/locations/global\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+"
          },
          {
            "name": "bucket",
            "description": "Required. The new bucket. The region specified in the new bucket must be\ncompliant with any Location Restriction Org Policy. The name field in the\nbucket is ignored.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogBucket",
              "required": [
                "bucket"
              ]
            }
          },
          {
            "name": "bucket_id",
            "description": "Required. A client-assigned identifier such as `\"my-bucket\"`. Identifiers\nare limited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent}/exclusions": {
      "get": {
        "summary": "Lists all the exclusions on the _Default sink in a parent resource.",
        "operationId": "ListExclusions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListExclusionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The parent resource whose exclusions are to be listed.\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a new exclusion in the _Default sink in a specified parent\nresource. Only log entries belonging to that resource can be excluded. You\ncan have up to 10 exclusions in a resource.",
        "operationId": "CreateExclusion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogExclusion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The parent resource in which to create the exclusion:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-logging-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+"
          },
          {
            "name": "exclusion",
            "description": "Required. The new exclusion, whose `name` parameter is an exclusion name\nthat is not already used in the parent resource.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogExclusion",
              "required": [
                "exclusion"
              ]
            }
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent}/links": {
      "get": {
        "summary": "Lists links.",
        "operationId": "ListLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The parent resource whose links are to be listed:\n\n  \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/\"\n  \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/\"\n  \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Asynchronously creates a linked dataset in BigQuery which makes it possible\nto use BigQuery to read the logs stored in the log bucket. A log bucket may\ncurrently only contain one link.",
        "operationId": "CreateLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/longrunningOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The full resource name of the bucket to create a link for.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "link",
            "description": "Required. The new link.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2Link",
              "required": [
                "link"
              ]
            }
          },
          {
            "name": "link_id",
            "description": "Required. The ID to use for the link. The link_id can have up to 100\ncharacters. A valid link_id must only have alphanumeric characters and\nunderscores within it.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent}/sinks": {
      "get": {
        "summary": "Lists sinks.",
        "operationId": "ListSinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListSinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The parent resource whose sinks are to be listed:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a sink that exports specified log entries to a destination. The\nexport of newly-ingested log entries begins immediately, unless the sink's\n`writer_identity` is not permitted to write to the destination. A sink can\nexport log entries only from the resource owning the sink.",
        "operationId": "CreateSink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The resource in which to create the sink:\n\n    \"projects/[PROJECT_ID]\"\n    \"organizations/[ORGANIZATION_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]\"\n    \"folders/[FOLDER_ID]\"\n\nFor examples:\n\n  `\"projects/my-project\"`\n  `\"organizations/123456789\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The new sink, whose `name` parameter is a sink identifier that\nis not already in use.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. Determines the kind of IAM identity returned as `writer_identity`\nin the new sink. If this value is omitted or set to false, and if the\nsink's parent is a project, then the value returned as `writer_identity` is\nthe same group or service account used by Cloud Logging before the addition\nof writer identities to this API. The sink's destination must be in the\nsame project as the sink itself.\n\nIf this field is set to true, or if the sink is owned by a non-project\nresource such as an organization, then the value of `writer_identity` will\nbe a unique service account used only for exports from the new sink. For\nmore information, see `writer_identity` in\n[LogSink][google.logging.v2.LogSink].",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{parent}/views": {
      "get": {
        "summary": "Lists views on a log bucket.",
        "operationId": "ListViews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListViewsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The bucket whose views are to be listed:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "page_token",
            "description": "Optional. If present, then retrieve the next batch of results from the\npreceding call to this method. `pageToken` must be the value of\n`nextPageToken` from the previous response. The values of other method\nparameters should be identical to those in the previous call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Optional. The maximum number of results to return from this request.\n\nNon-positive values are ignored. The presence of `nextPageToken` in the\nresponse indicates that more results might be available.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "post": {
        "summary": "Creates a view over log entries in a log bucket. A bucket may contain a\nmaximum of 30 views.",
        "operationId": "CreateView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Required. The bucket in which to create the view\n\n    `\"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]\"`\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-bucket\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/locations/[^/]+/buckets/[^/]+"
          },
          {
            "name": "view",
            "description": "Required. The new view.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogView",
              "required": [
                "view"
              ]
            }
          },
          {
            "name": "view_id",
            "description": "Required. A client-assigned identifier such as `\"my-view\"`. Identifiers are\nlimited to 100 characters and can include only letters, digits,\nunderscores, hyphens, and periods.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{sink_name_1}": {
      "get": {
        "summary": "Gets a sink.",
        "operationId": "GetSink2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_1",
            "description": "Required. The resource name of the sink:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a sink. If the sink has a unique `writer_identity`, then that\nservice account is also deleted.",
        "operationId": "DeleteSink2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_1",
            "description": "Required. The full resource name of the sink to delete, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "put": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_1",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "update_mask",
            "description": "Optional. Field mask that specifies the fields in `sink` that need\nan update. A sink field will be overwritten if, and only if, it is\nin the update mask. `name` and output only fields cannot be updated.\n\nAn empty `updateMask` is temporarily treated as using the following mask\nfor backwards compatibility purposes:\n\n  `destination,filter,includeChildren`\n\nAt some point in the future, behavior will be removed and specifying an\nempty `updateMask` will be an error.\n\nFor a detailed `FieldMask` definition, see\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=filter`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink7",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_1",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{sink_name_2}": {
      "get": {
        "summary": "Gets a sink.",
        "operationId": "GetSink3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_2",
            "description": "Required. The resource name of the sink:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a sink. If the sink has a unique `writer_identity`, then that\nservice account is also deleted.",
        "operationId": "DeleteSink3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_2",
            "description": "Required. The full resource name of the sink to delete, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "put": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_2",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "update_mask",
            "description": "Optional. Field mask that specifies the fields in `sink` that need\nan update. A sink field will be overwritten if, and only if, it is\nin the update mask. `name` and output only fields cannot be updated.\n\nAn empty `updateMask` is temporarily treated as using the following mask\nfor backwards compatibility purposes:\n\n  `destination,filter,includeChildren`\n\nAt some point in the future, behavior will be removed and specifying an\nempty `updateMask` will be an error.\n\nFor a detailed `FieldMask` definition, see\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=filter`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink8",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_2",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{sink_name_3}": {
      "get": {
        "summary": "Gets a sink.",
        "operationId": "GetSink4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_3",
            "description": "Required. The resource name of the sink:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a sink. If the sink has a unique `writer_identity`, then that\nservice account is also deleted.",
        "operationId": "DeleteSink4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_3",
            "description": "Required. The full resource name of the sink to delete, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "put": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_3",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "folders/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "update_mask",
            "description": "Optional. Field mask that specifies the fields in `sink` that need\nan update. A sink field will be overwritten if, and only if, it is\nin the update mask. `name` and output only fields cannot be updated.\n\nAn empty `updateMask` is temporarily treated as using the following mask\nfor backwards compatibility purposes:\n\n  `destination,filter,includeChildren`\n\nAt some point in the future, behavior will be removed and specifying an\nempty `updateMask` will be an error.\n\nFor a detailed `FieldMask` definition, see\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=filter`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink9",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_3",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{sink_name_4}": {
      "get": {
        "summary": "Gets a sink.",
        "operationId": "GetSink5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_4",
            "description": "Required. The resource name of the sink:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a sink. If the sink has a unique `writer_identity`, then that\nservice account is also deleted.",
        "operationId": "DeleteSink5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_4",
            "description": "Required. The full resource name of the sink to delete, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "put": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name_4",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "billingAccounts/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "update_mask",
            "description": "Optional. Field mask that specifies the fields in `sink` that need\nan update. A sink field will be overwritten if, and only if, it is\nin the update mask. `name` and output only fields cannot be updated.\n\nAn empty `updateMask` is temporarily treated as using the following mask\nfor backwards compatibility purposes:\n\n  `destination,filter,includeChildren`\n\nAt some point in the future, behavior will be removed and specifying an\nempty `updateMask` will be an error.\n\nFor a detailed `FieldMask` definition, see\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=filter`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    },
    "/v2/{sink_name}": {
      "get": {
        "summary": "Gets a sink.",
        "operationId": "GetSink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name",
            "description": "Required. The resource name of the sink:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "delete": {
        "summary": "Deletes a sink. If the sink has a unique `writer_identity`, then that\nservice account is also deleted.",
        "operationId": "DeleteSink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name",
            "description": "Required. The full resource name of the sink to delete, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/sinks/[^/]+"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "put": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[^/]+/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "update_mask",
            "description": "Optional. Field mask that specifies the fields in `sink` that need\nan update. A sink field will be overwritten if, and only if, it is\nin the update mask. `name` and output only fields cannot be updated.\n\nAn empty `updateMask` is temporarily treated as using the following mask\nfor backwards compatibility purposes:\n\n  `destination,filter,includeChildren`\n\nAt some point in the future, behavior will be removed and specifying an\nempty `updateMask` will be an error.\n\nFor a detailed `FieldMask` definition, see\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask\n\nFor example: `updateMask=filter`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      },
      "patch": {
        "summary": "Updates a sink. This method replaces the following fields in the existing\nsink with values from the new sink: `destination`, and `filter`.",
        "description": "The updated sink might also have a new `writer_identity`; see the\n`unique_writer_identity` field.",
        "operationId": "UpdateSink6",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LogSink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sink_name",
            "description": "Required. The full resource name of the sink to update, including the\nparent resource and the sink identifier:\n\n    \"projects/[PROJECT_ID]/sinks/[SINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]\"\n    \"folders/[FOLDER_ID]/sinks/[SINK_ID]\"\n\nFor example:\n\n  `\"projects/my-project/sinks/my-sink\"`",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "projects/[^/]+/sinks/[^/]+"
          },
          {
            "name": "sink",
            "description": "Required. The updated sink, whose name is the same identifier that appears\nas part of `sink_name`.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LogSink",
              "required": [
                "sink"
              ]
            }
          },
          {
            "name": "unique_writer_identity",
            "description": "Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]\nfor a description of this field. When updating a sink, the effect of this\nfield on the value of `writer_identity` in the updated sink depends on both\nthe old and new values of this field:\n\n+   If the old and new values of this field are both false or both true,\n    then there is no change to the sink's `writer_identity`.\n+   If the old value is false and the new value is true, then\n    `writer_identity` is changed to a unique service account.\n+   It is an error if the old value is true and the new value is\n    set to false or defaulted to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ConfigServiceV2"
        ]
      }
    }
  },
  "definitions": {
    "ConfigServiceV2UndeleteBucketBody": {
      "type": "object",
      "description": "The parameters to `UndeleteBucket`."
    },
    "LogSinkVersionFormat": {
      "type": "string",
      "enum": [
        "V2",
        "V1"
      ],
      "description": "Deprecated. This is unused.\n\n - V2: `LogEntry` version 2 format.\n - V1: `LogEntry` version 1 format."
    },
    "longrunningOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "$ref": "#/definitions/protobufAny",
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."
        },
        "error": {
          "$ref": "#/definitions/rpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "$ref": "#/definitions/protobufAny",
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "v2BigQueryDataset": {
      "type": "object",
      "properties": {
        "dataset_id": {
          "type": "string",
          "description": "Output only. The full resource name of the BigQuery dataset. The DATASET_ID\nwill match the ID of the link, so the link must match the naming\nrestrictions of BigQuery datasets (alphanumeric characters and underscores\nonly).\n\nThe dataset will have a resource path of\n  \"bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET_ID]\"",
          "readOnly": true
        }
      },
      "description": "Describes a BigQuery dataset that was created by a link."
    },
    "v2BigQueryOptions": {
      "type": "object",
      "properties": {
        "use_partitioned_tables": {
          "type": "boolean",
          "description": "Optional. Whether to use [BigQuery's partition\ntables](https://cloud.google.com/bigquery/docs/partitioned-tables). By\ndefault, Cloud Logging creates dated tables based on the log entries'\ntimestamps, e.g. syslog_20170523. With partitioned tables the date suffix\nis no longer present and [special query\nsyntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)\nhas to be used instead. In both cases, tables are sharded based on UTC\ntimezone."
        },
        "uses_timestamp_column_partitioning": {
          "type": "boolean",
          "description": "Output only. True if new timestamp column based partitioning is in use,\nfalse if legacy ingestion-time partitioning is in use.\n\nAll new sinks will have this field set true and will use timestamp column\nbased partitioning. If use_partitioned_tables is false, this value has no\nmeaning and will be false. Legacy sinks using partitioned tables will have\nthis field set to false.",
          "readOnly": true
        }
      },
      "description": "Options that change functionality of a sink exporting data to BigQuery."
    },
    "v2CmekSettings": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the CMEK settings.",
          "readOnly": true
        },
        "kms_key_name": {
          "type": "string",
          "description": "The resource name for the configured Cloud KMS key.\n\nKMS key name format:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]\"\n\nFor example:\n\n  `\"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key\"`\n\n\n\nTo enable CMEK for the Log Router, set this field to a valid\n`kms_key_name` for which the associated service account has the required\ncloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.\n\nThe Cloud KMS key used by the Log Router can be updated by changing the\n`kms_key_name` to a new valid key name or disabled by setting the key name\nto an empty string. Encryption operations that are in progress will be\ncompleted with the key that was in use when they started. Decryption\noperations will be completed using the key that was used at the time of\nencryption unless access to that key has been revoked.\n\nTo disable CMEK for the Log Router, set this field to an empty string.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information."
        },
        "kms_key_version_name": {
          "type": "string",
          "description": "The CryptoKeyVersion resource name for the configured Cloud KMS key.\n\nKMS key name format:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]\"\n\nFor example:\n\n  `\"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1\"`\n\nThis is a read-only field used to convey the specific configured\nCryptoKeyVersion of `kms_key` that has been configured. It will be\npopulated in cases where the CMEK settings are bound to a single key\nversion.\n\nIf this field is populated, the `kms_key` is tied to a specific\nCryptoKeyVersion."
        },
        "service_account_id": {
          "type": "string",
          "description": "Output only. The service account that will be used by the Log Router to\naccess your Cloud KMS key.\n\nBefore enabling CMEK for Log Router, you must first assign the\ncloudkms.cryptoKeyEncrypterDecrypter role to the service account that\nthe Log Router will use to access your Cloud KMS key. Use\n[GetCmekSettings][google.logging.v2.ConfigServiceV2.GetCmekSettings] to\nobtain the service account ID.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
          "readOnly": true
        }
      },
      "description": "Describes the customer-managed encryption key (CMEK) settings associated with\na project, folder, organization, billing account, or flexible resource.\n\nNote: CMEK for the Log Router can currently only be configured for Google\nCloud organizations. Once configured, it applies to all projects and folders\nin the Google Cloud organization.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption) for\nmore information."
    },
    "v2CopyLogEntriesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Log bucket from which to copy log entries.\n\nFor example:\n\n  `\"projects/my-project/locations/global/buckets/my-source-bucket\"`"
        },
        "filter": {
          "type": "string",
          "description": "Optional. A filter specifying which log entries to copy. The filter must be\nno more than 20k characters. An empty filter matches all log entries."
        },
        "destination": {
          "type": "string",
          "description": "Required. Destination to which to copy log entries."
        }
      },
      "description": "The parameters to CopyLogEntries.",
      "required": [
        "name",
        "destination"
      ]
    },
    "v2IndexConfig": {
      "type": "object",
      "properties": {
        "field_path": {
          "type": "string",
          "description": "Required. The LogEntry field path to index.\n\nNote that some paths are automatically indexed, and other paths are not\neligible for indexing. See [indexing documentation](\nhttps://cloud.google.com/logging/docs/view/advanced-queries#indexed-fields)\nfor details.\n\nFor example: `jsonPayload.request.status`"
        },
        "type": {
          "$ref": "#/definitions/v2IndexType",
          "description": "Required. The type of data in this index."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The timestamp when the index was last modified.\n\nThis is used to return the timestamp, and will be ignored if supplied\nduring update.",
          "readOnly": true
        }
      },
      "description": "Configuration for an indexed field.",
      "required": [
        "field_path",
        "type"
      ]
    },
    "v2IndexType": {
      "type": "string",
      "enum": [
        "INDEX_TYPE_STRING",
        "INDEX_TYPE_INTEGER"
      ],
      "description": "IndexType is used for custom indexing. It describes the type of an indexed\nfield.\n\n - INDEX_TYPE_STRING: The index is a string-type index.\n - INDEX_TYPE_INTEGER: The index is a integer-type index."
    },
    "v2LifecycleState": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "DELETE_REQUESTED",
        "UPDATING",
        "CREATING",
        "FAILED"
      ],
      "description": "LogBucket lifecycle states.\n\n - ACTIVE: The normal and active state.\n - DELETE_REQUESTED: The resource has been marked for deletion by the user. For some resources\n(e.g. buckets), this can be reversed by an un-delete operation.\n - UPDATING: The resource has been marked for an update by the user. It will remain in\nthis state until the update is complete.\n - CREATING: The resource has been marked for creation by the user. It will remain in\nthis state until the creation is complete.\n - FAILED: The resource is in an INTERNAL error state."
    },
    "v2Link": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the link. The name can have up to 100 characters.\nA valid link id (at the end of the link name) must only have alphanumeric\ncharacters and underscores within it.\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n    \"organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n    \"billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n    \"folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]\"\n\nFor example:\n\n  `projects/my-project/locations/global/buckets/my-bucket/links/my_link"
        },
        "description": {
          "type": "string",
          "description": "Describes this link.\n\nThe maximum length of the description is 8000 characters."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The creation timestamp of the link.",
          "readOnly": true
        },
        "lifecycle_state": {
          "$ref": "#/definitions/v2LifecycleState",
          "description": "Output only. The resource lifecycle state.",
          "readOnly": true
        },
        "bigquery_dataset": {
          "$ref": "#/definitions/v2BigQueryDataset",
          "description": "The information of a BigQuery Dataset. When a link is created, a BigQuery\ndataset is created along with it, in the same project as the LogBucket it's\nlinked to. This dataset will also have BigQuery Views corresponding to the\nLogViews in the bucket."
        }
      },
      "description": "Describes a link connected to an analytics enabled bucket."
    },
    "v2ListBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LogBucket"
          },
          "description": "A list of buckets."
        },
        "next_page_token": {
          "type": "string",
          "description": "If there might be more results than appear in this response, then\n`nextPageToken` is included. To get the next set of results, call the same\nmethod again using the value of `nextPageToken` as `pageToken`."
        }
      },
      "description": "The response from ListBuckets."
    },
    "v2ListExclusionsResponse": {
      "type": "object",
      "properties": {
        "exclusions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LogExclusion"
          },
          "description": "A list of exclusions."
        },
        "next_page_token": {
          "type": "string",
          "description": "If there might be more results than appear in this response, then\n`nextPageToken` is included. To get the next set of results, call the same\nmethod again using the value of `nextPageToken` as `pageToken`."
        }
      },
      "description": "Result returned from `ListExclusions`."
    },
    "v2ListLinksResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Link"
          },
          "description": "A list of links."
        },
        "next_page_token": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then\n`nextPageToken` is included. To get the next set of results, call the same\nmethod again using the value of `nextPageToken` as `pageToken`."
        }
      },
      "description": "The response from ListLinks."
    },
    "v2ListSinksResponse": {
      "type": "object",
      "properties": {
        "sinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LogSink"
          },
          "description": "A list of sinks."
        },
        "next_page_token": {
          "type": "string",
          "description": "If there might be more results than appear in this response, then\n`nextPageToken` is included. To get the next set of results, call the same\nmethod again using the value of `nextPageToken` as `pageToken`."
        }
      },
      "description": "Result returned from `ListSinks`."
    },
    "v2ListViewsResponse": {
      "type": "object",
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LogView"
          },
          "description": "A list of views."
        },
        "next_page_token": {
          "type": "string",
          "description": "If there might be more results than appear in this response, then\n`nextPageToken` is included. To get the next set of results, call the same\nmethod again using the value of `nextPageToken` as `pageToken`."
        }
      },
      "description": "The response from ListViews."
    },
    "v2LogBucket": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the bucket.\n\nFor example:\n\n  `projects/my-project/locations/global/buckets/my-bucket`\n\nFor a list of supported locations, see [Supported\nRegions](https://cloud.google.com/logging/docs/region-support)\n\nFor the location of `global` it is unspecified where log entries are\nactually stored.\n\nAfter a bucket has been created, the location cannot be changed.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Describes this bucket."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The creation timestamp of the bucket. This is not set for any\nof the default buckets.",
          "readOnly": true
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The last update timestamp of the bucket.",
          "readOnly": true
        },
        "retention_days": {
          "type": "integer",
          "format": "int32",
          "description": "Logs will be retained by default for this amount of time, after which they\nwill automatically be deleted. The minimum retention period is 1 day. If\nthis value is set to zero at bucket creation time, the default time of 30\ndays will be used."
        },
        "locked": {
          "type": "boolean",
          "description": "Whether the bucket is locked.\n\nThe retention period on a locked bucket cannot be changed. Locked buckets\nmay only be deleted if they are empty."
        },
        "lifecycle_state": {
          "$ref": "#/definitions/v2LifecycleState",
          "description": "Output only. The bucket lifecycle state.",
          "readOnly": true
        },
        "analytics_enabled": {
          "type": "boolean",
          "description": "Whether log analytics is enabled for this bucket.\n\nOnce enabled, log analytics features cannot be disabled."
        },
        "restricted_fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Log entry field paths that are denied access in this bucket.\n\nThe following fields and their children are eligible: `textPayload`,\n`jsonPayload`, `protoPayload`, `httpRequest`, `labels`, `sourceLocation`.\n\nRestricting a repeated field will restrict all values. Adding a parent will\nblock all child fields. (e.g. `foo.bar` will block `foo.bar.baz`)"
        },
        "index_configs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2IndexConfig"
          },
          "description": "A list of indexed fields and related configuration data."
        },
        "cmek_settings": {
          "$ref": "#/definitions/v2CmekSettings",
          "description": "The CMEK settings of the log bucket. If present, new log entries written to\nthis log bucket are encrypted using the CMEK key provided in this\nconfiguration. If a log bucket has CMEK settings, the CMEK settings cannot\nbe disabled later by updating the log bucket. Changing the KMS key is\nallowed."
        }
      },
      "description": "Describes a repository in which log entries are stored."
    },
    "v2LogExclusion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. A client-assigned identifier, such as\n`\"load-balancer-exclusion\"`. Identifiers are limited to 100 characters and\ncan include only letters, digits, underscores, hyphens, and periods. First\ncharacter has to be alphanumeric."
        },
        "description": {
          "type": "string",
          "description": "Optional. A description of this exclusion."
        },
        "filter": {
          "type": "string",
          "description": "Required. An [advanced logs\nfilter](https://cloud.google.com/logging/docs/view/advanced-queries) that\nmatches the log entries to be excluded. By using the [sample\nfunction](https://cloud.google.com/logging/docs/view/advanced-queries#sample),\nyou can exclude less than 100% of the matching log entries.\n\nFor example, the following query matches 99% of low-severity log entries\nfrom Google Cloud Storage buckets:\n\n  `resource.type=gcs_bucket severity\u003cERROR sample(insertId, 0.99)`"
        },
        "disabled": {
          "type": "boolean",
          "description": "Optional. If set to True, then this exclusion is disabled and it does not\nexclude any log entries. You can [update an\nexclusion][google.logging.v2.ConfigServiceV2.UpdateExclusion] to change the\nvalue of this field."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The creation timestamp of the exclusion.\n\nThis field may not be present for older exclusions.",
          "readOnly": true
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The last update timestamp of the exclusion.\n\nThis field may not be present for older exclusions.",
          "readOnly": true
        }
      },
      "description": "Specifies a set of log entries that are filtered out by a sink. If\nyour Google Cloud resource receives a large volume of log entries, you can\nuse exclusions to reduce your chargeable logs. Note that exclusions on\norganization-level and folder-level sinks don't apply to child resources.\nNote also that you cannot modify the _Required sink or exclude logs from it.",
      "required": [
        "name",
        "filter"
      ]
    },
    "v2LogSink": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The client-assigned sink identifier, unique within the project.\n\nFor example: `\"my-syslog-errors-to-pubsub\"`. Sink identifiers are limited\nto 100 characters and can include only the following characters: upper and\nlower-case alphanumeric characters, underscores, hyphens, and periods.\nFirst character has to be alphanumeric."
        },
        "destination": {
          "type": "string",
          "description": "\"storage.googleapis.com/[GCS_BUCKET]\"\n    \"bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]\"\n    \"pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]\"\n\nThe sink's `writer_identity`, set when the sink is created, must have\npermission to write to the destination or else the log entries are not\nexported. For more information, see\n[Exporting Logs with\nSinks](https://cloud.google.com/logging/docs/api/tasks/exporting-logs).",
          "title": "Required. The export destination:"
        },
        "filter": {
          "type": "string",
          "description": "Optional. An [advanced logs\nfilter](https://cloud.google.com/logging/docs/view/advanced-queries). The\nonly exported log entries are those that are in the resource owning the\nsink and that match the filter.\n\nFor example:\n\n  `logName=\"projects/[PROJECT_ID]/logs/[LOG_ID]\" AND severity\u003e=ERROR`"
        },
        "description": {
          "type": "string",
          "description": "Optional. A description of this sink.\n\nThe maximum length of the description is 8000 characters."
        },
        "disabled": {
          "type": "boolean",
          "description": "Optional. If set to true, then this sink is disabled and it does not export\nany log entries."
        },
        "exclusions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2LogExclusion"
          },
          "description": "Optional. Log entries that match any of these exclusion filters will not be\nexported.\n\nIf a log entry is matched by both `filter` and one of `exclusion_filters`\nit will not be exported."
        },
        "output_version_format": {
          "$ref": "#/definitions/LogSinkVersionFormat",
          "description": "Deprecated. This field is unused."
        },
        "writer_identity": {
          "type": "string",
          "description": "Output only. An IAM identity\u0026mdash;a service account or group\u0026mdash;under\nwhich Cloud Logging writes the exported log entries to the sink's\ndestination. This field is either set by specifying\n`custom_writer_identity` or set automatically by\n[sinks.create][google.logging.v2.ConfigServiceV2.CreateSink] and\n[sinks.update][google.logging.v2.ConfigServiceV2.UpdateSink] based on the\nvalue of `unique_writer_identity` in those methods.\n\nUntil you grant this identity write-access to the destination, log entry\nexports from this sink will fail. For more information, see [Granting\nAccess for a\nResource](https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource).\nConsult the destination service's documentation to determine the\nappropriate IAM roles to assign to the identity.\n\nSinks that have a destination that is a log bucket in the same project as\nthe sink cannot have a writer_identity and no additional permissions are\nrequired.",
          "readOnly": true
        },
        "include_children": {
          "type": "boolean",
          "description": "Optional. This field applies only to sinks owned by organizations and\nfolders. If the field is false, the default, only the logs owned by the\nsink's parent resource are available for export. If the field is true, then\nlog entries from all the projects, folders, and billing accounts contained\nin the sink's parent resource are also available for export. Whether a\nparticular log entry from the children is exported depends on the sink's\nfilter expression.\n\nFor example, if this field is true, then the filter\n`resource.type=gce_instance` would export all Compute Engine VM instance\nlog entries from all projects in the sink's parent.\n\nTo only export entries from certain child projects, filter on the project\npart of the log name:\n\n  logName:(\"projects/test-project1/\" OR \"projects/test-project2/\") AND\n  resource.type=gce_instance"
        },
        "bigquery_options": {
          "$ref": "#/definitions/v2BigQueryOptions",
          "description": "Optional. Options that affect sinks exporting data to BigQuery."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The creation timestamp of the sink.\n\nThis field may not be present for older sinks.",
          "readOnly": true
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The last update timestamp of the sink.\n\nThis field may not be present for older sinks.",
          "readOnly": true
        }
      },
      "description": "Describes a sink used to export log entries to one of the following\ndestinations in any project: a Cloud Storage bucket, a BigQuery dataset, a\nPub/Sub topic or a Cloud Logging log bucket. A logs filter controls which log\nentries are exported. The sink must be created within a project,\norganization, billing account, or folder.",
      "required": [
        "name",
        "destination"
      ]
    },
    "v2LogView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the view.\n\nFor example:\n\n  `projects/my-project/locations/global/buckets/my-bucket/views/my-view`"
        },
        "description": {
          "type": "string",
          "description": "Describes this view."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The creation timestamp of the view.",
          "readOnly": true
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. The last update timestamp of the view.",
          "readOnly": true
        },
        "filter": {
          "type": "string",
          "description": "Filter that restricts which log entries in a bucket are visible in this\nview.\n\nFilters are restricted to be a logical AND of ==/!= of any of the\nfollowing:\n\n  - originating project/folder/organization/billing account.\n  - resource type\n  - log id\n\nFor example:\n\n  SOURCE(\"projects/myproject\") AND resource.type = \"gce_instance\"\n                               AND LOG_ID(\"stdout\")"
        }
      },
      "description": "Describes a view over log entries in a bucket."
    },
    "v2Settings": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the settings.",
          "readOnly": true
        },
        "kms_key_name": {
          "type": "string",
          "description": "Optional. The resource name for the configured Cloud KMS key.\n\nKMS key name format:\n\n    \"projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]\"\n\nFor example:\n\n  `\"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key\"`\n\n\n\nTo enable CMEK for the Log Router, set this field to a valid\n`kms_key_name` for which the associated service account has the required\n`roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key.\n\nThe Cloud KMS key used by the Log Router can be updated by changing the\n`kms_key_name` to a new valid key name. Encryption operations that are in\nprogress will be completed with the key that was in use when they started.\nDecryption operations will be completed using the key that was used at the\ntime of encryption unless access to that key has been revoked.\n\nTo disable CMEK for the Log Router, set this field to an empty string.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information."
        },
        "kms_service_account_id": {
          "type": "string",
          "description": "Output only. The service account that will be used by the Log Router to\naccess your Cloud KMS key.\n\nBefore enabling CMEK for Log Router, you must first assign the role\n`roles/cloudkms.cryptoKeyEncrypterDecrypter` to the service account that\nthe Log Router will use to access your Cloud KMS key. Use\n[GetSettings][google.logging.v2.ConfigServiceV2.GetSettings] to\nobtain the service account ID.\n\nSee [Enabling CMEK for Log\nRouter](https://cloud.google.com/logging/docs/routing/managed-encryption)\nfor more information.",
          "readOnly": true
        },
        "storage_location": {
          "type": "string",
          "description": "Optional. The Cloud region that will be used for _Default and _Required log\nbuckets for newly created projects and folders. For example `europe-west1`.\nThis setting does not affect the location of custom log buckets."
        },
        "disable_default_sink": {
          "type": "boolean",
          "description": "Optional. If set to true, the _Default sink in newly created projects and\nfolders will created in a disabled state. This can be used to automatically\ndisable log ingestion if there is already an aggregated sink configured in\nthe hierarchy. The _Default sink can be re-enabled manually if needed."
        }
      },
      "description": "Describes the settings associated with a project, folder, organization,\nbilling account, or flexible resource."
    }
  }
}
